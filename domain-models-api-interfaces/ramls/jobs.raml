#%RAML 0.8

title: Admin API
baseUri: http://localhost:8081/v1
version: v1

schemas:
  - last_modified.schema: !include last_modified.schema
  - jobs: !include jobs.schema
  - job.schema: !include job.schema
  - jobs_conf.schema: !include jobs_conf.schema
  - jobs_confs: !include jobs_confs.schema
  - raml-util/schemas/parameters.schema: !include raml-util/schemas/parameters.schema
  - parameter: !include parameter.schema
  - bulks: !include bulks.schema
  - bulk.schema: !include bulk.schema

traits:
  - orderable: !include raml-util/traits/orderable.raml
  - pageable:  !include raml-util/traits/pageable.raml
  - searchable: !include raml-util/traits/searchable.raml
  - language: !include raml-util/traits/language.raml
  - secured: !include raml-util/traits/auth.raml

resourceTypes:
  - collection: !include raml-util/rtypes/collection.raml
  - collection-item: !include raml-util/rtypes/item-collection.raml

/jobs:
  /jobconfs:
    displayName: Jobs
    description: Jobs services
    type:
      collection:
        exampleCollection: !include examples/jobs_confs.sample
        exampleItem: !include examples/jobs_conf.sample
        schemaCollection: jobs_confs
        schemaItem: jobs_conf.schema
    get:
      is: [
        searchable: {description: "native mongodb query syntax with valid searchable fields: for example location", example: "{\"module\":\"IMPORTS\"}"},
        orderable: {fieldsList: "field A, field B"},
        pageable
      ]
      description: Return list of Jobs
    post:
      description: Create a new type of Job Conf
    /{jobconfsId}:
      type:
        collection-item:
          exampleItem: !include examples/jobs_conf.sample
          schema: jobs_conf.schema
      /jobs:
        type:
          collection:
            exampleCollection: !include examples/jobs.sample
            exampleItem: !include examples/job.sample
            schemaCollection: jobs
            schemaItem: job.schema
        get:
          is: [
            searchable: {description: "native mongodb query syntax with valid searchable fields: for example location", example: "{\"job_conf_id\":\"12345\"}"},
            orderable: {fieldsList: "field A, field B"},
            pageable
          ]
        /{jobId}:
          type:
            collection-item:
              exampleItem: !include examples/job.sample
              schema: job.schema
          /bulks:
            type:
              collection:
                exampleCollection: !include examples/bulks.sample
                exampleItem: !include examples/bulk.sample
                schemaCollection: bulks
                schemaItem: bulk.schema
